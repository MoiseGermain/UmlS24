podTemplate(yaml: '''
    apiVersion: v1
    kind: Pod
    spec:
      containers:
      - name: cloud-sdk
        image: google/cloud-sdk:latest
        command:
        - sleep
        args:
        - 9999999
        volumeMounts:
        - name: shared-storage
          mountPath: /mnt
        - name: google-cloud-key
          mountPath: /var/secrets/google
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /var/secrets/google/devops-msit-005330-1a293cb7f135.json        
      restartPolicy: Never
      volumes:
      - name: shared-storage
        persistentVolumeClaim:
          claimName: jenkins-pv-claim
      - name: google-cloud-key
        secret:
          secretName: sdk-key          
''') {
    node(POD_LABEL) {
        stage('Staging') {
            try {
                stage('Smoke test') {
                    container('gradle') {
                        git 'https://github.com/dlambrig/Continuous-Delivery-with-Docker-and-Jenkins-Second-Edition.git'
                        sh '''
                            cd Chapter08/sample1
                            chmod +x ./gradlew
                            ./gradlew smokeTest -Dcalculator.url=http://calculator-service.devops-tools.svc.cluster.local:8080
                        '''
                    }
                }
            } catch (Exception E) {
                error('staging tests failed')
            }

            stage('Deploy to GKE') {
                container('cloud-sdk') {
                    stage('Build a gradle project') {
                        sh '''
                            echo 'namespaces in the staging environment'
                            kubectl get ns
                            echo $GOOGLE_APPLICATION_CREDENTIALS
                            gcloud auth activate-service-account --key-file=$GOOGLE_APPLICATION_CREDENTIALS
                            gcloud container clusters get-credentials hello-cluster --region us-central1 --project devops-msit-005330 
                            echo 'namespaces in the prod environment'
                            kubectl get ns
                        '''
                    }
                }
            }
        }
    }
}
